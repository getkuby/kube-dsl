module KubeDSL::DSL::Networking::V1
  autoload :HTTPIngressPath, 'kube-dsl/dsl/networking/v1/http_ingress_path'
  autoload :HTTPIngressRuleValue, 'kube-dsl/dsl/networking/v1/http_ingress_rule_value'
  autoload :IPBlock, 'kube-dsl/dsl/networking/v1/ip_block'
  autoload :Ingress, 'kube-dsl/dsl/networking/v1/ingress'
  autoload :IngressBackend, 'kube-dsl/dsl/networking/v1/ingress_backend'
  autoload :IngressClass, 'kube-dsl/dsl/networking/v1/ingress_class'
  autoload :IngressClassList, 'kube-dsl/dsl/networking/v1/ingress_class_list'
  autoload :IngressClassParametersReference, 'kube-dsl/dsl/networking/v1/ingress_class_parameters_reference'
  autoload :IngressClassSpec, 'kube-dsl/dsl/networking/v1/ingress_class_spec'
  autoload :IngressList, 'kube-dsl/dsl/networking/v1/ingress_list'
  autoload :IngressRule, 'kube-dsl/dsl/networking/v1/ingress_rule'
  autoload :IngressServiceBackend, 'kube-dsl/dsl/networking/v1/ingress_service_backend'
  autoload :IngressSpec, 'kube-dsl/dsl/networking/v1/ingress_spec'
  autoload :IngressStatus, 'kube-dsl/dsl/networking/v1/ingress_status'
  autoload :IngressTLS, 'kube-dsl/dsl/networking/v1/ingress_tls'
  autoload :NetworkPolicy, 'kube-dsl/dsl/networking/v1/network_policy'
  autoload :NetworkPolicyEgressRule, 'kube-dsl/dsl/networking/v1/network_policy_egress_rule'
  autoload :NetworkPolicyIngressRule, 'kube-dsl/dsl/networking/v1/network_policy_ingress_rule'
  autoload :NetworkPolicyList, 'kube-dsl/dsl/networking/v1/network_policy_list'
  autoload :NetworkPolicyPeer, 'kube-dsl/dsl/networking/v1/network_policy_peer'
  autoload :NetworkPolicyPort, 'kube-dsl/dsl/networking/v1/network_policy_port'
  autoload :NetworkPolicySpec, 'kube-dsl/dsl/networking/v1/network_policy_spec'
  autoload :ServiceBackendPort, 'kube-dsl/dsl/networking/v1/service_backend_port'
end
